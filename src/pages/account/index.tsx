import { LargeButton } from "@/components/LargeButton";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { FiChevronLeft, FiUser } from "react-icons/fi";
import axios from "axios";
import { User } from "@prisma/client";
import { signOut, useSession } from "next-auth/react";
import { useEffect, useState } from "react";

type buttonProps = {
	variant: "primary";
	label: string;
	disable: boolean;
};

export default function Settings(props: buttonProps) {
	const handleSignOut = () => {
		signOut({ redirect: true, callbackUrl: "/auth/signIn" });
	};
	const { data: session } = useSession();
	const [user, setUser] = useState<User>();
	const getData = async () => {
		const info: User = await axios
			.get(
				`http://localhost:3000/api/listItems?inputList=${session?.user?.email}`
			)
			.then((res) => res.data);
		setUser(info);
	};
	useEffect(() => {
		getData();
	}, []);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className="px-8 flex flex-col bg-grad-frame">
				<header className="w-full flex items-center h-10 pt-8">
					<a href="">
						<FiChevronLeft size={28} />
					</a>
				</header>
				<div className="w-full flex-grow flex flex-col justify-around">
					<div className="flex bg-slate-400 w-full ">Account vs settings</div>
					<div className="flex w-full flex-col items-center gap-5">
						{/* This section will change depending on the account status of the User */}
						<div>
							<FiUser size={28} />
						</div>
						<div className="text-primary-default-Solid font-heading text-4xl">
							{" "}
							Hey, {user?.name}{" "}
						</div>
						<div className="w-full flex flex-col gap-5">
							<LargeButton
								variant="primary"
								label="Change E-Mail"
								disabled={false}
							/>
							<LargeButton
								variant="secondary"
								label="Log-Out"
								onClick={handleSignOut}
								disabled={false}
							/>
							<></>
						</div>
					</div>
				</div>
			</div>
		</>
	);
}
